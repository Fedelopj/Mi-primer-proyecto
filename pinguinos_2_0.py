# -*- coding: utf-8 -*-
"""pinguinos 2.0

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jzK739tXFBQQxU-Yj1TDNOtJEN7haOXK
"""

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
from scipy.spatial.distance import cdist
import numpy as np

file_path = "/penguins.csv"
df = pd.read_csv(file_path)

print("Primeras filas del DataFrame:")
print(df.head())

print("\nInformación del DataFrame:")
df.info()

print("\nValores nulos por columna:")
print(df.isnull().sum())

df = df.dropna()

df_num = df.select_dtypes(include=['float64', 'int64'])
print("\nVariables numéricas seleccionadas:")
print(df_num.columns)

if (df_num.nunique() == 1).any():
    columnas_eliminar = df_num.columns[df_num.nunique() == 1]
    df_num = df_num.drop(columns=columnas_eliminar)
    print(f"\nSe eliminaron las variables {list(columnas_eliminar)} por no aportar variabilidad.")
else:
    print("\nNo se eliminaron variables, todas aportan información relevante.")

scaler = StandardScaler()
df_scaled = scaler.fit_transform(df_num)

distortions = []
K = range(1, 10)
for k in K:
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(df_scaled)
    distortions.append(sum(np.min(cdist(df_scaled, kmeans.cluster_centers_, 'euclidean'), axis=1)) / df_scaled.shape[0])

plt.plot(K, distortions, 'bx-')
plt.xlabel('Número de clusters (k)')
plt.ylabel('Distorsión promedio')
plt.title('Método del Codo para determinar k')
plt.show()

k = 3
kmeans = KMeans(n_clusters=k, random_state=42)
kmeans.fit(df_scaled)

centers = kmeans.cluster_centers_
print("\nCentros de los clusters (en escala estandarizada):")
print(centers)

distancias = cdist(centers, centers)
print("\nMatriz de distancias entre los centros:")
print(pd.DataFrame(distancias))